import express from 'express';
import cors from 'cors';
import nodemailer from 'nodemailer';
import dotenv from 'dotenv';
import { createServer, IncomingMessage, ServerResponse } from 'http';

dotenv.config();

const app = express();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
app.use(cors());
app.use(express.json());

// Preflight
app.options('/send-email', (req, res) => {
  res.setHeader('Access-Control-Allow-Origin', 'https://lipart.vercel.app');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  res.setHeader('Access-Control-Allow-Credentials', 'true');
  res.status(200).end();
});

// –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç
app.post('/send-email', async (req, res) => {
  res.setHeader('Access-Control-Allow-Origin', 'https://lipart.vercel.app');
  res.setHeader('Access-Control-Allow-Credentials', 'true');

  const { name, email, message } = req.body;

  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.GMAIL_USER,
      pass: process.env.GMAIL_PASS,
    },
  });

  const mailOptions = {
    from: `"${name}" <${email}>`,
    to: process.env.GMAIL_USER,
    subject: `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${name}`,
    text: message,
  };

  try {
    await transporter.sendMail(mailOptions);
    res.status(200).json({ message: '–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞' });
  }
});

// üì¶ –≠–∫—Å–ø–æ—Ä—Ç —Ö–µ–Ω–¥–ª–µ—Ä–∞ –¥–ª—è Vercel
const server = createServer(app);

export default function handler(req: IncomingMessage, res: ServerResponse) {
  return server.emit('request', req, res);
}


// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
// app.listen(PORT, () => {
//   console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
// });
